<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>DockerTest</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>DockerTest</name>
    <description>DockerTest</description>
    <!--<packaging>pom</packaging>-->
    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-boot.version>2.3.7.RELEASE</spring-boot.version>
        <docker.image.prefix>dockerboot</docker.image.prefix>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <mainClass>com.example.dockertest.DockerTestApplication</mainClass>
                    &lt;!&ndash;<skip>true</skip>&ndash;&gt;
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <!--<version>1.0.0</version>-->
                <!--docker镜像相关的配置信息-->
                <configuration>

                    <!--<serverId>docker-aliyun</serverId>-->
                    <!--<registryUrl>${docker.repostory}</registryUrl>-->
                    <pushImage>true</pushImage>

                    <imageName>${docker.image.prefix}/dockertest</imageName>

                    <!--TAG,这里用工程版本号-->
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                    </imageTags>
                    <!--Dockerfile文件所在目录-->
                    <!--<dockerDirectory>${project.basedir}/src/main</dockerDirectory>-->

                    <baseImage>openjdk:8</baseImage>
                    <workdir>/ROOT</workdir>
                    <entryPoint>["java", "-jar", "/dockerboot.jar"]
                    </entryPoint>

                    <dockerHost>http://192.168.31.102:2375</dockerHost>
                    <!--构建镜像的配置信息-->
                    <resources>
                        <resource>
                            <targetPath>/ROOT</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>




        </plugins>
    </build>

</project>
